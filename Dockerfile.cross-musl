FROM rust:1.75-alpine AS builder

WORKDIR /ws

ARG BUILD_ARCH

RUN apk add --no-cache \
    musl-dev \
    curl \
    ca-certificates \
    openssl-dev
RUN rustup target add ${BUILD_ARCH}-unknown-linux-musl
RUN curl https://musl.cc/${BUILD_ARCH}-linux-musl-cross.tgz -o ${BUILD_ARCH}-linux-musl-cross.tgz && \
    tar -xzf ${BUILD_ARCH}-linux-musl-cross.tgz && \
    rm ${BUILD_ARCH}-linux-musl-cross.tgz && \
    mv ${BUILD_ARCH}-linux-musl-cross /
RUN mkdir .cargo && \
  echo -e "[target.${BUILD_ARCH}-unknown-linux-musl]\n\
linker = \"${BUILD_ARCH}-linux-musl-gcc\"\n\
ar = \"${BUILD_ARCH}-linux-musl-ar\"" > .cargo/config

ENV PATH=${PATH}:/${BUILD_ARCH}-linux-musl-cross/bin

RUN cargo install --version ^0.5 sqlx-cli

ADD Cargo.toml ./
ADD src/ ./src
ADD migrations/ ./migrations
ADD .env ./

ENV PKG_CONFIG_ALL_STATIC=1
RUN sqlx database create && sqlx migrate run
RUN cargo build --release --target ${BUILD_ARCH}-unknown-linux-musl

FROM --platform=$BUILD_ARCH scratch

ARG BUILD_ARCH

COPY --from=builder /ws/target/${BUILD_ARCH}-unknown-linux-musl/release/futaba /
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

EXPOSE 80

ENTRYPOINT ["/futaba"]
